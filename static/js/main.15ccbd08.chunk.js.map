{"version":3,"sources":["components/DisplayFlight.jsx","components/Flight.jsx","components/DirectFlight.jsx","components/DateFilter.jsx","components/Filter.jsx","components/LocationSearch.jsx","components/FilterWithLocation.jsx","components/Flight_Data_API.jsx","world.svg","App.js","index.js"],"names":["DisplayFlight","props","flight","flyFrom","flyTo","cityFrom","cityTo","price","airlines","dTime","aTime","route","flight_no","stopover","findIndex","routePart","Date","toLocaleTimeString","Flight","flights","length","className","map","index","DirectFlight","htmlFor","type","name","checked","onChange","e","setDirect","target","DateFilter","min","setDateFrom","DateTime","fromISO","value","toFormat","setDateTo","Filter","useState","from","setFrom","to","setTo","direct","dateFrom","dateTo","id","selected","disabled","onClick","search","LocationSearch","setLoaded","city","a","console","log","url","URL","URLSearchParams","term","locale","location_types","limit","active_only","sort","toString","fetch","toJSON","response","json","data","locations","code","fetchCity","FilterWithLocation","FlightDataAPI","setFlights","loaded","fetchFlights","query","v","partner","partner_market","curr","fly_from","toUpperCase","fly_to","date_from","date_to","max_stopovers","asc","App","src","logo","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15ccbd08.chunk.js","sourcesContent":["function DisplayFlight(props) {\r\n    const {flyFrom, flyTo, cityFrom, cityTo, price, airlines, dTime ,aTime, route } = props.flight;\r\n    const{ flight_no } = route[0];\r\n    const stopover = route.findIndex((routePart) => routePart.flyTo === flyTo)\r\n\r\n    return (\r\n\r\n                <tr>\r\n                    <td>{flyFrom}</td>\r\n                    <td>{flyTo}</td>\r\n                    <td>{cityFrom}</td>\r\n                    <td>{cityTo}</td>\r\n                    <td>{price} EUR</td>\r\n                    <td>{airlines}</td>\r\n                    <td>{flight_no}</td>\r\n                    <td>{stopover}</td>\r\n                    <td>{new Date(dTime * 1000).toLocaleTimeString()}</td>\r\n                    <td>{new Date(aTime * 1000).toLocaleTimeString()}</td>\r\n\r\n                </tr>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default DisplayFlight;","import DisplayFlight from \"./DisplayFlight\";\r\n\r\nfunction Flight(props) {\r\n    \r\n    if(props.flights.length === 0 ){\r\n        return (\r\n            <span>No flights for this route! </span>\r\n        )\r\n    }\r\n        \r\n    return (\r\n        <table className=\"table_flights \">\r\n            <thead>\r\n                <tr>\r\n                    <th>Fly From</th>\r\n                    <th>Fly To</th>\r\n                    <th>City From</th>\r\n                    <th>City To</th>\r\n                    <th>Price</th>\r\n                    <th>Airlines</th>\r\n                    <th>Flight No.</th>\r\n                    <th>Stopover</th>\r\n                    <th>Departure</th>\r\n                    <th>Arrival</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.flights.map((flight,index)=>(\r\n                        <DisplayFlight key={index} flight={flight}/>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n    \r\n}\r\n\r\nexport default Flight;","\r\n\r\nfunction DirectFlight(props) {\r\n\r\n    const handleCheckbox = (e) => {\r\n        props.setDirect(e.target.checked); \r\n    } \r\n\r\n    return (\r\n        <div className=\"directFlight-selection\">\r\n            <div className=\"directFlight-filter\"> \r\n                <label htmlFor=\"directFlight\"> Direct Flight </label>\r\n                <input type=\"checkbox\" name=\"directFlight\" checked={props.checked} onChange={handleCheckbox}/>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DirectFlight;","import { DateTime } from 'luxon';\r\n\r\nfunction DateFilter(props) {\r\n\r\n    const handleFromDate = (e) => {\r\n        props.setDateFrom(DateTime.fromISO(e.target.value).toFormat('d/M/yyyy'));\r\n    } \r\n\r\n    const handleToDate = (e) => {\r\n        props.setDateTo(DateTime.fromISO(e.target.value).toFormat('d/M/yyyy'));\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"DateFilter-selection\">\r\n            <div className=\"DateFilter-filter\">\r\n                <label htmlFor=\"DateFilter\"> Date from: </label><br />\r\n                <input type=\"date\" name=\"date_from\" min=\"2021-06-25\"  onChange={handleFromDate}/><br />\r\n                <label htmlFor=\"DateFilter\"> Date to: </label><br />\r\n                <input type=\"date\" name=\"date_to\" min=\"2021-06-25\" onChange={handleToDate}/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default DateFilter;","import {useState} from 'react'\r\nimport DirectFlight from './DirectFlight';\r\nimport DateFilter from './DateFilter';\r\n\r\nfunction Filter(props) {\r\n\r\n    const [from,setFrom] = useState('');\r\n    const [to,setTo] = useState('');\r\n    const [direct,setDirect] = useState(false);\r\n    const [dateFrom,setDateFrom] = useState('');\r\n    const [dateTo,setDateTo] = useState('');\r\n\r\n    const handleFrom = (e) => {\r\n       setFrom(e.target.value);\r\n    }\r\n\r\n     const handleTo = (e) => {\r\n        setTo(e.target.value);\r\n    }\r\n\r\n    return (\r\n\r\n            <div className=\"cities-selection\">\r\n                <h1>With Dropdown</h1>\r\n                <div className=\"origin-filter\">\r\n                    <h3>Origin </h3>\r\n                    <select name=\"filter_from\" id=\"\" onChange={handleFrom}> \r\n                        <option selected=\"true\" disabled=\"disabled\"> -- Select an origin city -- </option>\r\n                        <option value=\"prg\">Prague</option>\r\n                        <option value=\"ber\">Berlin</option>\r\n                        <option value=\"waw\">Warsaw</option>\r\n                        <option value=\"ped\">Pardubice</option>\r\n                    </select>\r\n                </div>\r\n                <div className=\"destination-filter\">\r\n                    <h3>Destination</h3>\r\n                    <select name=\"filter_to\" id=\"\" onChange={handleTo}> \r\n                        <option selected=\"true\" disabled=\"disabled\"> -- Select a destination city -- </option>\r\n                        <option value=\"vlc\">Valencia</option>\r\n                        <option value=\"bcn\">Barcelona</option>\r\n                        <option value=\"mad\">Madrid</option>\r\n                        <option value=\"mxp\">Milano</option>\r\n                        <option value=\"ath\">Athens</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <DateFilter setDateFrom={setDateFrom} setDateTo={setDateTo}/>\r\n\r\n                <DirectFlight setDirect={setDirect} direct={direct}/>\r\n\r\n                <button onClick={()=>{props.search({ from,to,direct,dateFrom, dateTo })}}>Find</button>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Filter;","import { useState } from \"react\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nfunction LocationSearch(props){\r\n\r\n    const [query, setQuery] = useState(\"\");\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n\r\n    async function fetchCity(city) {\r\n            setLoaded(false)\r\n            console.log(city);\r\n            const url = new URL('https://api.skypicker.com/locations')\r\n            url.search = new URLSearchParams({\r\n                term:city,\r\n                locale:\"en-US\",\r\n                location_types:\"airport\",\r\n                limit:10,\r\n                active_only:true,\r\n                sort:\"name\",\r\n                }).toString()\r\n            const response = await fetch(url.toJSON());\r\n            const data = await response.json();\r\n            \r\n            if(data.locations.length > 0) {\r\n                console.log(data.locations[0].code)\r\n                props.onChange(data.locations[0].code)\r\n            }\r\n            setLoaded(true)\r\n    }  \r\n        \r\n    const handleCity = (e) => {\r\n        fetchCity(e.target.value);\r\n        \r\n    }\r\n\r\n    return (\r\n        <input type=\"text\" name=\"city\"  onChange={handleCity}/>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default LocationSearch;","import {useState} from 'react'\r\nimport DirectFlight from './DirectFlight';\r\nimport DateFilter from './DateFilter';\r\nimport LocationSearch from './LocationSearch';\r\n\r\nfunction FilterWithLocation(props) {\r\n\r\n    const [from,setFrom] = useState('');\r\n    const [to,setTo] = useState('');\r\n    const [direct,setDirect] = useState(false);\r\n    const [dateFrom,setDateFrom] = useState('');\r\n    const [dateTo,setDateTo] = useState('');\r\n\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"cities-selection\">\r\n                <h1>With Location</h1>\r\n                <div className=\"origin-filter\">\r\n                    <h3>Origin</h3>\r\n                    <LocationSearch onChange={setFrom} />\r\n                </div>\r\n                <div className=\"destination-filter\">\r\n                    <h3>Destination</h3>\r\n                    <LocationSearch onChange={setTo} />\r\n                </div>\r\n\r\n                <DateFilter setDateFrom={setDateFrom} setDateTo={setDateTo}/>\r\n\r\n                <DirectFlight setDirect={setDirect} direct={direct}/>\r\n\r\n                <button onClick={()=>{props.search({ from,to,direct,dateFrom, dateTo })}}>Find</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilterWithLocation;","import {useState , useEffect} from 'react';\r\nimport Flight from './Flight';\r\nimport SearchBar from './SearchBar';\r\nimport Filter from './Filter';\r\nimport FilterWithLocation from './FilterWithLocation';\r\n\r\nfunction FlightDataAPI(props) {\r\n    const [flights, setFlights] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [city, setCity] = useState(\"\");\r\n \r\n    async function fetchFlights(query) {\r\n        setLoaded(false)\r\n        \r\n        const url = new URL('https://api.skypicker.com/flights')\r\n        url.search = new URLSearchParams({\r\n            v: 3,\r\n            locale: 'en',\r\n            partner: \"data4youcbp202106\",\r\n            partner_market: 'us',\r\n            curr: 'EUR',\r\n            fly_from: query.from.toUpperCase(),\r\n            fly_to: query.to.toUpperCase(),\r\n            date_from: query.dateFrom,\r\n            date_to: query.dateTo,\r\n            max_stopovers: query.direct ? 0 : 1000, \r\n            limit: 5,\r\n            sort: 'price',\r\n            asc: 1,\r\n        }).toString()\r\n     \r\n        const response = await fetch(url.toJSON());\r\n        const data = await response.json();\r\n\r\n        setFlights(data.data);\r\n\r\n        setLoaded(true)\r\n    }  \r\n\r\n    return (\r\n        <div className=\"search-block\">\r\n      \r\n            <Filter  search={fetchFlights}/>\r\n            <FilterWithLocation  search={fetchFlights}/>\r\n            {loaded && <Flight flights={flights} />}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FlightDataAPI;","export default __webpack_public_path__ + \"static/media/world.a017e3b9.svg\";","import FlightDataAPI from \"./components/Flight_Data_API\";\r\nimport LocationSearch from \"./components/LocationSearch\";\r\nimport logo from './world.svg';\r\n\r\nfunction App() {\r\n  return (\r\n    <main>\r\n      <div className=\"container\">\r\n        <h1>Travel Finder</h1>\r\n        \r\n        <img src={logo} alt=\"Logo\" className=\"App-logo\"/>\r\n        \r\n        <FlightDataAPI/>\r\n\r\n       \r\n      </div>\r\n    </main>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}